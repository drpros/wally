import requests
from web3 import Web3
from telegram import Bot

# Constants
ETHERSCAN_API_KEY = 'your_etherscan_api_key'
COINGECKO_BASE_URL = 'https://api.coingecko.com/api/v3'
TELEGRAM_BOT_TOKEN = 'your_telegram_bot_token'
TELEGRAM_CHAT_ID = 'your_chat_id'
WALLET_ADDRESS = '0x112C81489125048b9DD131bEe6D35505aAA18E40'

# Functions
def get_token_balances(wallet_address):
    url = f"https://api.etherscan.io/api?module=account&action=tokenbalance&contractaddress={wallet_address}&apikey={ETHERSCAN_API_KEY}"
    response = requests.get(url).json()
    if response['status'] == '1':
        return response['result']
    else:
        return None

def get_token_info(token_address):
    url = f"{COINGECKO_BASE_URL}/coins/ethereum/contract/{token_address}"
    response = requests.get(url).json()
    if 'market_data' in response:
        return {
            'price': response['market_data']['current_price']['usd'],
            'market_cap': response['market_data']['market_cap']['usd']
        }
    else:
        return None

def send_to_telegram(message):
    bot = Bot(token=TELEGRAM_BOT_TOKEN)
    bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message)

def main():
    # Step 1: Get Wallet Balances
    balances = get_token_balances(WALLET_ADDRESS)
    if not balances:
        send_to_telegram("Failed to retrieve wallet balances.")
        return

    report = "Wallet Holdings:\n\n"
    for token_address, balance in balances.items():
        # Step 2: Fetch Token Info
        token_info = get_token_info(token_address)
        if not token_info:
            continue
        price = token_info['price']
        market_cap = token_info['market_cap']
        report += f"Token: {token_address}\nBalance: {balance}\nPrice: ${price}\nMarket Cap: ${market_cap}\n\n"

    # Step 3: Send Report to Telegram
    send_to_telegram(report)

if __name__ == "__main__":
    main()
